# Deployment and Service file for the webapp

apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp-deployment
  labels:
    app: webapp
spec:
  # How many pobs we wish to create using this blueprint
  replicas: 1 # Should only have 1 instance of db if we want more we should use a statefulset
  selector:
    # Selectors define how K8s know which pods belong to which deployments
    matchLabels:
      app: webapp
  # Configuration for the pod inside the deployment definition
  template:
    metadata:
      # In K8s you can give any component a key value pair label, which give information about the component
      # e.g. "release": "stable" "env": "dev" or "env": "production"
      # Different instances of the same pod have the same name, so labels facilitate a collective identifier  
      labels:
        app: webapp
    spec:
      containers:
      - name: webapp
        image: nanajanashia/k8s-demo-app:v1.0
        ports:
        - containerPort: 3000
      # No config values are present in our deployment files, if these change we don't need to redeploy and have downtime
        env:
        - name: USER_NAME
          valueFrom:
            secretKeyRef: 
              name: mongo-secret
              key: mongo-user
        - name: USER_PWD 
          valueFrom:
            secretKeyRef: 
              name: mongo-secret
              key: mongo-pwd
        - name: DB_URL
          valueFrom:
            configMapKeyRef:
              name: mongo-config
              key: mongo-url
---
apiVersion: v1
kind: Service
metadata:
  name: webapp-service
spec:
  # External service type
  type: NodePort
  selector:
    app: webapp
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
      # In K8s node port must be between 30000-32767)
      nodePort: 30100